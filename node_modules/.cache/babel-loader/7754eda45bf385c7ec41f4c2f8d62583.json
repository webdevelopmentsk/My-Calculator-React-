{"ast":null,"code":"var _jsxFileName = \"/home/sawi/Documents/My Apps and Sites/simplecalculator-react/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Monitor from './components/Monitor';\n\nconst App = () => {\n  const buttonTexts = [{\n    value: '6',\n    type: 'number'\n  }, {\n    value: '7',\n    type: 'number'\n  }, {\n    value: '8',\n    type: 'number'\n  }, {\n    value: '9',\n    type: 'number'\n  }, {\n    value: '5',\n    type: 'number'\n  }, {\n    value: '4',\n    type: 'number'\n  }, {\n    value: '3',\n    type: 'number'\n  }, {\n    value: '2',\n    type: 'number'\n  }, {\n    value: '1',\n    type: 'number'\n  }, {\n    value: '0',\n    type: 'number'\n  }, {\n    value: 'AC',\n    type: 'delete'\n  }, {\n    value: '+',\n    type: 'operator'\n  }, {\n    value: '-',\n    type: 'operator'\n  }, {\n    value: '*',\n    type: 'operator'\n  }, {\n    value: '/',\n    type: 'operator'\n  }, {\n    value: 'Enter',\n    type: 'enter'\n  }];\n  const [monitorText, setMonitorText] = useState('');\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [operator, setOperator] = useState('');\n  const [decimalCount, setDecimalCount] = useState(0);\n  const [enterCount, setEnterCount] = useState(0);\n  const [currentNumber, setCurrentNumber] = useState('');\n\n  const fnCurrentNumber = value => {\n    if (currentNumber !== '0') {\n      let newNumber = currentNumber + value.toString();\n      setCurrentNumber(newNumber);\n\n      if (enterCount !== 0) {\n        setEnterCount(0);\n      }\n    } else {\n      setCurrentNumber(value);\n    }\n  };\n\n  const fnDecimal = value => {\n    if (decimalCount === 0) {\n      let newNumber;\n      setDecimalCount(1);\n      enterCount !== 0 ? newNumber = '0' + value.toString() : newNumber = currentNumber + value.toString();\n      setCurrentNumber(newNumber);\n    }\n  };\n\n  const fnOpertor = value => {\n    setNumber1(currentNumber);\n    setOperator(value);\n    setCurrentNumber('0');\n    setDecimalCount(0);\n  };\n\n  const onClickTask = (type, value) => {\n    switch (type) {\n      case 'number':\n        fnCurrentNumber(value);\n        break;\n\n      case 'decimal':\n        fnDecimal(value);\n        break;\n\n      case 'operator':\n        fnOpertor(value);\n        break;\n    }\n  };\n\n  const renderButtons = buttonTexts.map((obj, index) => /*#__PURE__*/React.createElement(Button, {\n    key: index,\n    value: obj.value,\n    type: obj.type,\n    onClickTask: onClickTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 54\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Monitor, {\n    display: currentNumber + operator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui inverted segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, renderButtons)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sawi/Documents/My Apps and Sites/simplecalculator-react/src/App.js"],"names":["React","useState","Button","Monitor","App","buttonTexts","value","type","monitorText","setMonitorText","number1","setNumber1","number2","setNumber2","operator","setOperator","decimalCount","setDecimalCount","enterCount","setEnterCount","currentNumber","setCurrentNumber","fnCurrentNumber","newNumber","toString","fnDecimal","fnOpertor","onClickTask","renderButtons","map","obj","index"],"mappings":"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","sourcesContent":["import React , { useState }from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Monitor from './components/Monitor';\n\nconst App = () => {\n  const buttonTexts = [\n    {value: '6', type: 'number'}, \n    {value: '7', type: 'number'}, \n    {value: '8', type: 'number'}, \n    {value: '9', type: 'number'}, \n    {value: '5', type: 'number'}, \n    {value: '4', type: 'number'}, \n    {value: '3', type: 'number'}, \n    {value: '2', type: 'number'}, \n    {value: '1', type: 'number'}, \n    {value: '0', type: 'number'}, \n    {value: 'AC', type: 'delete'}, \n    {value: '+', type: 'operator'}, \n    {value: '-', type: 'operator'}, \n    {value: '*', type: 'operator'}, \n    {value: '/', type: 'operator'}, \n    {value: 'Enter', type: 'enter'}, \n  ]\n\n  const [monitorText, setMonitorText] = useState('');\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [operator, setOperator] = useState('');\n  const [decimalCount, setDecimalCount] = useState(0);\n  const [enterCount, setEnterCount] = useState(0);\n  const [currentNumber, setCurrentNumber] = useState('');\n\n  const fnCurrentNumber = value =>{\n    if(currentNumber !== '0'){\n      let newNumber = currentNumber + value.toString();\n      setCurrentNumber(newNumber);\n      if(enterCount !== 0){setEnterCount(0)}\n    }\n    else{setCurrentNumber(value);}\n  };\n  const fnDecimal = value => {\n    if(decimalCount === 0){\n      let newNumber;\n      setDecimalCount(1);\n\n      enterCount !== 0 ? newNumber = '0' + value.toString()\n      :newNumber = currentNumber + value.toString()\n\n      setCurrentNumber(newNumber);\n    }\n  };\n  const fnOpertor = value => {\n    setNumber1(currentNumber)\n    setOperator(value);\n    setCurrentNumber('0');\n    setDecimalCount(0);\n\n  };\n\n  const onClickTask = (type,value) => {\n    switch(type){\n      case 'number': fnCurrentNumber(value);break;\n      case 'decimal': fnDecimal(value);break;\n      case 'operator': fnOpertor(value);break;\n\n    }\n    \n  }\n\nconst renderButtons = buttonTexts.map((obj,index) => <Button key = {index} value={obj.value} type = {obj.type} onClickTask={onClickTask}/>);\n\n\n\n  return(\n    <>\n    \n      <div className = \"calculator\">\n        <Monitor display = {currentNumber + operator}/>\n        <div className = \"ui inverted segment\">\n         {renderButtons}\n         </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}