{"ast":null,"code":"var _jsxFileName = \"/home/sawi/Documents/My Apps and Sites/simplecalculator-react/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Monitor from './components/Monitor';\n\nconst App = () => {\n  const [monitorText, setMonitorText] = useState('');\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [operator, setOperator] = useState('');\n  const [decimalCount, setDecimalCount] = useState(0);\n  const [enterCount, setEnterCount] = useState(0);\n  const [currentNumber, setCurrentNumber] = useState(0);\n\n  const onClickTask = (type, value) => {\n    if (type === \"number\") {\n      if (currentNumber != '0' && enterCount == 0) {\n        currentNumber += value.toString();\n      } else if (currentNumber != '0' && enterCount != 0) {\n        currentNumber += value.toString();\n        enterCount = 0;\n      } else {\n        currentNumber = value;\n      }\n\n      setNumbers();\n      monitorShow.textContent = currentNumber;\n    }\n\n    if (type === \"decimal\") {}\n\n    if (type === \"operator\") {}\n  };\n\n  const fnSetNumbers = () => {};\n\n  const buttonTexts = ['6', '7', '8', '9', '5', '4', '3', '2', '1', '0', '.', 'AC', '+', '-', '*', '/', 'Enter'];\n  const renderButtons = buttonTexts.map(txt => /*#__PURE__*/React.createElement(Button, {\n    key: txt,\n    text: txt,\n    onClickTask: onClickTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 46\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Monitor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui inverted segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, renderButtons)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sawi/Documents/My Apps and Sites/simplecalculator-react/src/App.js"],"names":["React","useState","Button","Monitor","App","monitorText","setMonitorText","number1","setNumber1","number2","setNumber2","currentIndex","setCurrentIndex","operator","setOperator","decimalCount","setDecimalCount","enterCount","setEnterCount","currentNumber","setCurrentNumber","onClickTask","type","value","toString","setNumbers","monitorShow","textContent","fnSetNumbers","buttonTexts","renderButtons","map","txt"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,YAAD,EAAcC,eAAd,IAAiCX,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,CAAD,CAAlD;;AAEF,QAAMoB,WAAW,GAAG,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAClC,QAAGD,IAAI,KAAG,QAAV,EAAmB;AAEf,UAAGH,aAAa,IAAI,GAAjB,IAAwBF,UAAU,IAAG,CAAxC,EAA0C;AACtCE,QAAAA,aAAa,IAAII,KAAK,CAACC,QAAN,EAAjB;AACH,OAFD,MAGK,IAAGL,aAAa,IAAI,GAAjB,IAAwBF,UAAU,IAAI,CAAzC,EAA2C;AAC5CE,QAAAA,aAAa,IAAII,KAAK,CAACC,QAAN,EAAjB;AACAP,QAAAA,UAAU,GAAE,CAAZ;AACH,OAHI,MAID;AACAE,QAAAA,aAAa,GAACI,KAAd;AACH;;AACDE,MAAAA,UAAU;AACVC,MAAAA,WAAW,CAACC,WAAZ,GAAyBR,aAAzB;AACH;;AACD,QAAGG,IAAI,KAAG,SAAV,EAAoB,CAEnB;;AACD,QAAGA,IAAI,KAAG,UAAV,EAAqB,CAEpB;AACF,GAtBD;;AAuBA,QAAMM,YAAY,GAAG,MAAK,CAEzB,CAFD;;AAGA,QAAMC,WAAW,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,IAA7C,EAAkD,GAAlD,EAAsD,GAAtD,EAA0D,GAA1D,EAA8D,GAA9D,EAAkE,OAAlE,CAApB;AACA,QAAMC,aAAa,GAAGD,WAAW,CAACE,GAAZ,CAAgBC,GAAG,iBAAI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAIA,GAAf;AAAoB,IAAA,IAAI,EAAEA,GAA1B;AAA+B,IAAA,WAAW,EAAEX,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAtB;AAIE,sBACE,uDAEE;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACES,aADF,CAFF,CAFF,CADF;AAWD,CApDD;;AAsDA,eAAe1B,GAAf","sourcesContent":["import React , { useState }from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Monitor from './components/Monitor';\n\nconst App = () => {\n  const [monitorText, setMonitorText] = useState('');\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [currentIndex,setCurrentIndex] = useState(0);\n  const [operator, setOperator] = useState('');\n  const [decimalCount, setDecimalCount] = useState(0);\n  const [enterCount, setEnterCount] = useState(0);\n  const [currentNumber, setCurrentNumber] = useState(0);\n\nconst onClickTask = (type,value) => {\n  if(type===\"number\"){\n      \n      if(currentNumber != '0' && enterCount== 0){\n          currentNumber += value.toString();\n      }\n      else if(currentNumber != '0' && enterCount != 0){\n          currentNumber += value.toString();\n          enterCount= 0;\n      }\n      else{\n          currentNumber=value;\n      }\n      setNumbers();\n      monitorShow.textContent= currentNumber;\n  }\n  if(type===\"decimal\"){\n    \n  }\n  if(type===\"operator\"){\n    \n  }\n}\nconst fnSetNumbers = () =>{\n\n}\nconst buttonTexts = ['6','7','8','9','5','4','3','2','1','0','.','AC','+','-','*','/','Enter'];\nconst renderButtons = buttonTexts.map(txt => <Button key = {txt} text={txt} onClickTask={onClickTask}/>);\n\n\n\n  return(\n    <>\n    \n      <div className = \"calculator\">\n        <Monitor></Monitor>\n        <div className = \"ui inverted segment\">\n         {renderButtons}\n         </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}